{"version":3,"file":"component---src-templates-blog-post-simple-tsx-814443729dc126111d8c.js","mappings":"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","sources":["webpack://retire.guru/./node_modules/.pnpm/extend@3.0.2/node_modules/extend/index.js","webpack://retire.guru/./node_modules/.pnpm/style-to-js@1.1.17/node_modules/style-to-js/cjs/index.js","webpack://retire.guru/./node_modules/.pnpm/@chakra-ui+react@2.10.9_@emotion+react@11.14.0_@types+react@18.3.24_react@18.3.1__@emotion+st_far47hkomecorcpggod2wewp54/node_modules/@chakra-ui/react/dist/esm/image/use-image.mjs","webpack://retire.guru/./node_modules/.pnpm/@chakra-ui+react@2.10.9_@emotion+react@11.14.0_@types+react@18.3.24_react@18.3.1__@emotion+st_far47hkomecorcpggod2wewp54/node_modules/@chakra-ui/react/dist/esm/image/native-image.mjs","webpack://retire.guru/./node_modules/.pnpm/@chakra-ui+react@2.10.9_@emotion+react@11.14.0_@types+react@18.3.24_react@18.3.1__@emotion+st_far47hkomecorcpggod2wewp54/node_modules/@chakra-ui/react/dist/esm/image/image.mjs","webpack://retire.guru/./node_modules/.pnpm/inline-style-parser@0.2.4/node_modules/inline-style-parser/index.js","webpack://retire.guru/./node_modules/.pnpm/@chakra-ui+react@2.10.9_@emotion+react@11.14.0_@types+react@18.3.24_react@18.3.1__@emotion+st_far47hkomecorcpggod2wewp54/node_modules/@chakra-ui/react/dist/esm/stack/v-stack.mjs","webpack://retire.guru/./node_modules/.pnpm/style-to-js@1.1.17/node_modules/style-to-js/cjs/utilities.js","webpack://retire.guru/./node_modules/.pnpm/style-to-object@1.0.9/node_modules/style-to-object/cjs/index.js","webpack://retire.guru/./node_modules/.pnpm/@chakra-ui+react@2.10.9_@emotion+react@11.14.0_@types+react@18.3.24_react@18.3.1__@emotion+st_far47hkomecorcpggod2wewp54/node_modules/@chakra-ui/react/dist/esm/typography/heading.mjs","webpack://retire.guru/./node_modules/.pnpm/devlop@1.1.0/node_modules/devlop/lib/default.js","webpack://retire.guru/./node_modules/.pnpm/estree-util-is-identifier-name@3.0.0/node_modules/estree-util-is-identifier-name/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/hast-util-whitespace@3.0.0/node_modules/hast-util-whitespace/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/schema.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/merge.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/normalize.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/info.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/types.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/defined-info.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/create.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/aria.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/html.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/svg.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/xlink.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/xmlns.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/xml.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/index.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/find.js","webpack://retire.guru/./node_modules/.pnpm/property-information@7.1.0/node_modules/property-information/lib/hast-to-react.js","webpack://retire.guru/./node_modules/.pnpm/unist-util-position@5.0.0/node_modules/unist-util-position/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/unist-util-stringify-position@4.0.0/node_modules/unist-util-stringify-position/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/vfile-message@4.0.3/node_modules/vfile-message/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/hast-util-to-jsx-runtime@2.3.6/node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/comma-separated-tokens@2.0.3/node_modules/comma-separated-tokens/index.js","webpack://retire.guru/./node_modules/.pnpm/space-separated-tokens@2.0.2/node_modules/space-separated-tokens/index.js","webpack://retire.guru/./node_modules/.pnpm/html-url-attributes@3.0.1/node_modules/html-url-attributes/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-string@4.0.0/node_modules/mdast-util-to-string/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-util-chunked@2.0.1/node_modules/micromark-util-chunked/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-util-subtokenize@2.1.0/node_modules/micromark-util-subtokenize/lib/splice-buffer.js","webpack://retire.guru/./node_modules/.pnpm/micromark-util-subtokenize@2.1.0/node_modules/micromark-util-subtokenize/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-util-combine-extensions@2.0.1/node_modules/micromark-util-combine-extensions/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-util-character@2.1.1/node_modules/micromark-util-character/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-factory-space@2.0.1/node_modules/micromark-factory-space/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/content.js","webpack://retire.guru/./node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/document.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/content.js","webpack://retire.guru/./node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/flow.js","webpack://retire.guru/./node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/initialize/text.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/list.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://retire.guru/./node_modules/.pnpm/micromark-factory-destination@2.0.1/node_modules/micromark-factory-destination/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-factory-label@2.0.1/node_modules/micromark-factory-label/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-factory-title@2.0.1/node_modules/micromark-factory-title/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-factory-whitespace@2.0.1/node_modules/micromark-factory-whitespace/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-util-normalize-identifier@2.0.1/node_modules/micromark-util-normalize-identifier/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/definition.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://retire.guru/./node_modules/.pnpm/micromark-util-html-tag-name@2.0.1/node_modules/micromark-util-html-tag-name/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://retire.guru/./node_modules/.pnpm/decode-named-character-reference@1.2.0/node_modules/decode-named-character-reference/index.dom.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://retire.guru/./node_modules/.pnpm/micromark-util-resolve-all@2.0.1/node_modules/micromark-util-resolve-all/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/label-end.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://retire.guru/./node_modules/.pnpm/micromark-util-classify-character@2.0.1/node_modules/micromark-util-classify-character/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/attention.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/autolink.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/html-text.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://retire.guru/./node_modules/.pnpm/micromark-core-commonmark@2.0.3/node_modules/micromark-core-commonmark/lib/code-text.js","webpack://retire.guru/./node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/constructs.js","webpack://retire.guru/./node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/create-tokenizer.js","webpack://retire.guru/./node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/preprocess.js","webpack://retire.guru/./node_modules/.pnpm/micromark-util-decode-numeric-character-reference@2.0.2/node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-util-decode-string@2.0.1/node_modules/micromark-util-decode-string/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-from-markdown@2.0.2/node_modules/mdast-util-from-markdown/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/postprocess.js","webpack://retire.guru/./node_modules/.pnpm/micromark@4.0.2/node_modules/micromark/lib/parse.js","webpack://retire.guru/./node_modules/.pnpm/remark-parse@11.0.0/node_modules/remark-parse/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/types.js","webpack://retire.guru/./node_modules/.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://retire.guru/./node_modules/.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/serialize.js","webpack://retire.guru/./node_modules/.pnpm/@ungap+structured-clone@1.3.0/node_modules/@ungap/structured-clone/esm/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-util-sanitize-uri@2.0.1/node_modules/micromark-util-sanitize-uri/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/footer.js","webpack://retire.guru/./node_modules/.pnpm/unist-util-is@6.0.0/node_modules/unist-util-is/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/unist-util-visit-parents@6.0.1/node_modules/unist-util-visit-parents/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/unist-util-visit@5.0.0/node_modules/unist-util-visit/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/revert.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://retire.guru/./node_modules/.pnpm/trim-lines@3.0.1/node_modules/trim-lines/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/state.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-hast@13.2.0/node_modules/mdast-util-to-hast/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/remark-rehype@11.1.2/node_modules/remark-rehype/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/bail@2.0.2/node_modules/bail/index.js","webpack://retire.guru/./node_modules/.pnpm/is-plain-obj@4.1.0/node_modules/is-plain-obj/index.js","webpack://retire.guru/./node_modules/.pnpm/trough@2.2.0/node_modules/trough/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minpath.browser.js","webpack://retire.guru/./node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minproc.browser.js","webpack://retire.guru/./node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minurl.shared.js","webpack://retire.guru/./node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/minurl.browser.js","webpack://retire.guru/./node_modules/.pnpm/vfile@6.0.3/node_modules/vfile/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/unified@11.0.5/node_modules/unified/lib/callable-instance.js","webpack://retire.guru/./node_modules/.pnpm/unified@11.0.5/node_modules/unified/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/react-markdown@10.1.0_@types+react@18.3.24_react@18.3.1/node_modules/react-markdown/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/ccount@2.0.1/node_modules/ccount/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-find-and-replace@3.0.2/node_modules/mdast-util-find-and-replace/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/escape-string-regexp@5.0.0/node_modules/escape-string-regexp/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-gfm-autolink-literal@2.0.1/node_modules/mdast-util-gfm-autolink-literal/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-gfm-footnote@2.1.0/node_modules/mdast-util-gfm-footnote/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-gfm-strikethrough@2.0.0/node_modules/mdast-util-gfm-strikethrough/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/markdown-table@3.0.4/node_modules/markdown-table/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/encode-character-reference.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/encode-info.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-phrasing@4.1.0/node_modules/mdast-util-phrasing/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://retire.guru/./node_modules/.pnpm/longest-streak@3.1.0/node_modules/longest-streak/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-to-markdown@2.1.2/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-gfm-table@2.0.0/node_modules/mdast-util-gfm-table/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-gfm-task-list-item@2.0.0/node_modules/mdast-util-gfm-task-list-item/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-extension-gfm-autolink-literal@2.1.0/node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://retire.guru/./node_modules/.pnpm/micromark-extension-gfm-footnote@2.1.0/node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://retire.guru/./node_modules/.pnpm/micromark-extension-gfm-strikethrough@2.1.0/node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://retire.guru/./node_modules/.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/edit-map.js","webpack://retire.guru/./node_modules/.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/infer.js","webpack://retire.guru/./node_modules/.pnpm/micromark-extension-gfm-table@2.1.1/node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://retire.guru/./node_modules/.pnpm/micromark-extension-gfm-task-list-item@2.1.0/node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://retire.guru/./node_modules/.pnpm/remark-gfm@4.0.1/node_modules/remark-gfm/lib/index.js","webpack://retire.guru/./node_modules/.pnpm/micromark-extension-gfm@3.0.0/node_modules/micromark-extension-gfm/index.js","webpack://retire.guru/./node_modules/.pnpm/mdast-util-gfm@3.1.0/node_modules/mdast-util-gfm/lib/index.js","webpack://retire.guru/./src/templates/blog-post-simple.tsx"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar style_to_object_1 = __importDefault(require(\"style-to-object\"));\nvar utilities_1 = require(\"./utilities\");\n/**\n * Parses CSS inline style to JavaScript object (camelCased).\n */\nfunction StyleToJS(style, options) {\n    var output = {};\n    if (!style || typeof style !== 'string') {\n        return output;\n    }\n    (0, style_to_object_1.default)(style, function (property, value) {\n        // skip CSS comment\n        if (property && value) {\n            output[(0, utilities_1.camelCase)(property, options)] = value;\n        }\n    });\n    return output;\n}\nStyleToJS.default = StyleToJS;\nmodule.exports = StyleToJS;\n//# sourceMappingURL=index.js.map","'use client';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\nimport { useState, useEffect, useRef, useCallback } from 'react';\n\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef(null);\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad?.(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError?.(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nconst shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport { shouldShowFallbackImage, useImage };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ jsx(\"img\", { width: htmlWidth, height: htmlHeight, ref, alt, ...rest });\n});\nNativeImage.displayName = \"NativeImage\";\n\nexport { NativeImage };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omit } from '@chakra-ui/utils';\nimport { NativeImage } from './native-image.mjs';\nimport { useImage, shouldShowFallbackImage } from './use-image.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || // use can opt out of fallback image\n  ignoreFallback || // if the user doesn't provide any kind of fallback we should ignore it\n  !providedFallback;\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport { Image };\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Stack } from './stack.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst VStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"column\", ref }));\nVStack.displayName = \"VStack\";\n\nexport { VStack };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelCase = void 0;\nvar CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9_-]+$/;\nvar HYPHEN_REGEX = /-([a-z])/g;\nvar NO_HYPHEN_REGEX = /^[^-]+$/;\nvar VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nvar MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\n/**\n * Checks whether to skip camelCase.\n */\nvar skipCamelCase = function (property) {\n    return !property ||\n        NO_HYPHEN_REGEX.test(property) ||\n        CUSTOM_PROPERTY_REGEX.test(property);\n};\n/**\n * Replacer that capitalizes first character.\n */\nvar capitalize = function (match, character) {\n    return character.toUpperCase();\n};\n/**\n * Replacer that removes beginning hyphen of vendor prefix property.\n */\nvar trimHyphen = function (match, prefix) { return \"\".concat(prefix, \"-\"); };\n/**\n * CamelCases a CSS property.\n */\nvar camelCase = function (property, options) {\n    if (options === void 0) { options = {}; }\n    if (skipCamelCase(property)) {\n        return property;\n    }\n    property = property.toLowerCase();\n    if (options.reactCompat) {\n        // `-ms` vendor prefix should not be capitalized\n        property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    else {\n        // for non-React, remove first hyphen so vendor prefix is not capitalized\n        property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    return property.replace(HYPHEN_REGEX, capitalize);\n};\nexports.camelCase = camelCase;\n//# sourceMappingURL=utilities.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Heading = forwardRef(\n  function Heading2(props, ref) {\n    const styles = useStyleConfig(\"Heading\", props);\n    const { className, ...rest } = omitThemingProps(props);\n    return /* @__PURE__ */ jsx(\n      chakra.h2,\n      {\n        ref,\n        className: cx(\"chakra-heading\", props.className),\n        ...rest,\n        __css: styles\n      }\n    );\n  }\n);\nHeading.displayName = \"Heading\";\n\nexport { Heading };\n","export function deprecate(fn) {\n  return fn\n}\n\nexport function equal() {}\n\nexport function ok() {}\n\nexport function unreachable() {}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n","import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n","/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: overloadedBoolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n","import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n","// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n","/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * Special cases for React (`Record<string, string>`).\n *\n * `hast` is close to `React` but differs in a couple of cases.\n * To get a React property from a hast property,\n * check if it is in `hastToReact`.\n * If it is, use the corresponding value;\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file = ''\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual = undefined\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected = undefined\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note = undefined\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url = undefined\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, JsxElement, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToJs from 'style-to-js'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JsxElement}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  try {\n    return styleToJs(value, {reactCompat: true})\n  } catch (error) {\n    if (state.ignoreInvalidStyle) {\n      return {}\n    }\n\n    const cause = /** @type {Error} */ (error)\n    const message = new VFileMessage('Cannot parse `style` attribute', {\n      ancestors: state.ancestors,\n      cause,\n      ruleId: 'style',\n      source: 'hast-util-to-jsx-runtime'\n    })\n    message.file = state.filePath || undefined\n    message.url = docs + '#cannot-parse-style-attribute'\n\n    throw message\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {string | number} */ (result.value)\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else if (otherEvent[1].type === \"linePrefix\" || otherEvent[1].type === \"listItemIndent\") {\n          // Move past.\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  let tokenizer = token._tokenizer;\n  if (!tokenizer) {\n    tokenizer = context.parser[token.contentType](token.start);\n    if (token._contentTypeTextTrailing) {\n      tokenizer._contentTypeTextTrailing = true;\n    }\n  }\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n\n      // Allow final trailing whitespace.\n      if (context._contentTypeTextTrailing && eventIndex === events.length) {\n        size = 0;\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[content][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/// <reference lib=\"dom\" />\n\n/* global document */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string | false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const character = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  if (\n    // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n    // yield `null`.\n    character.charCodeAt(character.length - 1) === 59 /* `;` */ &&\n    value !== 'semi'\n  ) {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return character === characterReference ? false : character\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n        /* c8 ignore next 4 -- used to be used, no longer */\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * * if a processor is given,\n *   runs the (rehype) plugins used on it with a hast tree,\n *   then discards the result (*bridge mode*)\n * * otherwise,\n *   returns a hast tree,\n *   the plugins used after `remarkRehype` are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**:\n * > It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * * `rehype-stringify` also has an option `allowDangerousHtml` which will\n *   output the raw HTML.\n *   This is typically discouraged as noted by the option name but is useful if\n *   you completely trust authors\n * * `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *   into standard hast nodes (`element`, `text`, etc);\n *   this is a heavy task as it needs a full HTML parser,\n *   but it is the only way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark,\n * which we follow by default.\n * They are supported by GitHub,\n * so footnotes can be enabled in markdown with `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes,\n * which is hidden for sighted users but shown to assistive technology.\n * When your page is not in English,\n * you must define translated values.\n *\n * Back references use ARIA attributes,\n * but the section label itself uses a heading that is hidden with an\n * `sr-only` class.\n * To show it to sighted users,\n * define different attributes in `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem,\n * as it links footnote calls to footnote definitions on the page through `id`\n * attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * * when the node has a `value`\n *   (and doesn’t have `data.hName`, `data.hProperties`, or `data.hChildren`,\n *   see later),\n *   create a hast `text` node\n * * otherwise,\n *   create a `<div>` element (which could be changed with `data.hName`),\n *   with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @overload\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge | TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given,\n *   configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @import {Element, Nodes, Parents, Root} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {ComponentType, JSX, ReactElement, ReactNode} from 'react'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {BuildVisitor} from 'unist-util-visit'\n * @import {PluggableList, Processor} from 'unified'\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n */\n\n/**\n * @typedef ExtraProps\n *   Extra fields we pass.\n * @property {Element | undefined} [node]\n *   passed when `passNode` is on.\n */\n\n/**\n * @typedef {{\n *   [Key in keyof JSX.IntrinsicElements]?: ComponentType<JSX.IntrinsicElements[Key] & ExtraProps> | keyof JSX.IntrinsicElements\n * }} Components\n *   Map tag names to components.\n */\n\n/**\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n */\n\n/**\n * @typedef HooksOptionsOnly\n *   Configuration specifically for {@linkcode MarkdownHooks}.\n * @property {ReactNode | null | undefined} [fallback]\n *   Content to render while the processor processing the markdown (optional).\n */\n\n/**\n * @typedef {Options & HooksOptionsOnly} HooksOptions\n *   Configuration for {@linkcode MarkdownHooks};\n *   extends the regular {@linkcode Options} with a `fallback` prop.\n */\n\n/**\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport {useEffect, useState} from 'react'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {from: 'className', id: 'remove-classname'},\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * This is a synchronous component.\n * When using async plugins,\n * see {@linkcode MarkdownAsync} or {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function Markdown(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  return post(processor.runSync(processor.parse(file), file), options)\n}\n\n/**\n * Component to render markdown with support for async plugins\n * through async/await.\n *\n * Components returning promises are supported on the server.\n * For async support on the client,\n * see {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Promise<ReactElement>}\n *   Promise to a React element.\n */\nexport async function MarkdownAsync(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  const tree = await processor.run(processor.parse(file), file)\n  return post(tree, options)\n}\n\n/**\n * Component to render markdown with support for async plugins through hooks.\n *\n * This uses `useEffect` and `useState` hooks.\n * Hooks run on the client and do not immediately render something.\n * For async support on the server,\n * see {@linkcode MarkdownAsync}.\n *\n * @param {Readonly<HooksOptions>} options\n *   Props.\n * @returns {ReactNode}\n *   React node.\n */\nexport function MarkdownHooks(options) {\n  const processor = createProcessor(options)\n  const [error, setError] = useState(\n    /** @type {Error | undefined} */ (undefined)\n  )\n  const [tree, setTree] = useState(/** @type {Root | undefined} */ (undefined))\n\n  useEffect(\n    function () {\n      let cancelled = false\n      const file = createFile(options)\n\n      processor.run(processor.parse(file), file, function (error, tree) {\n        if (!cancelled) {\n          setError(error)\n          setTree(tree)\n        }\n      })\n\n      /**\n       * @returns {undefined}\n       *   Nothing.\n       */\n      return function () {\n        cancelled = true\n      }\n    },\n    [\n      options.children,\n      options.rehypePlugins,\n      options.remarkPlugins,\n      options.remarkRehypeOptions\n    ]\n  )\n\n  if (error) throw error\n\n  return tree ? post(tree, options) : options.fallback\n}\n\n/**\n * Set up the `unified` processor.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Processor<MdastRoot, MdastRoot, Root, undefined, undefined>}\n *   Result.\n */\nfunction createProcessor(options) {\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  return processor\n}\n\n/**\n * Set up the virtual file.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {VFile}\n *   Result.\n */\nfunction createFile(options) {\n  const children = options.children || ''\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  return file\n}\n\n/**\n * Process the result from unified some more.\n *\n * @param {Nodes} tree\n *   Tree.\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nfunction post(tree, options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  visit(tree, transform)\n\n  return toJsxRuntime(tree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {BuildVisitor<Root>} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon === -1 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash !== -1 && colon > slash) ||\n    (questionMark !== -1 && colon > questionMark) ||\n    (numberSign !== -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @import {Nodes, Parents, PhrasingContent, Root, Text} from 'mdast'\n * @import {BuildVisitor, Test, VisitorResult} from 'unist-util-visit-parents'\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @import {RegExpMatchObject, ReplaceFunction} from 'mdast-util-find-and-replace'\n * @import {CompileContext, Extension as FromMarkdownExtension, Handle as FromMarkdownHandle, Transform as FromMarkdownTransform} from 'mdast-util-from-markdown'\n * @import {ConstructName, Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n * @import {Link, PhrasingContent} from 'mdast'\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/(?<=^|\\s|\\p{P}|\\p{S})([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/gu, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    // If it’s an email, the previous character should not be a slash.\n    (!email || code !== 47)\n  )\n}\n","/**\n * @import {\n *   CompileContext,\n *   Extension as FromMarkdownExtension,\n *   Handle as FromMarkdownHandle\n * } from 'mdast-util-from-markdown'\n * @import {ToMarkdownOptions} from 'mdast-util-gfm-footnote'\n * @import {\n *   Handle as ToMarkdownHandle,\n *   Map,\n *   Options as ToMarkdownExtension\n * } from 'mdast-util-to-markdown'\n * @import {FootnoteDefinition, FootnoteReference} from 'mdast'\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n  node.label = label\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {after: ']', before: value})\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteCallString: enterFootnoteCallString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: enterFootnoteDefinition\n    },\n    exit: {\n      gfmFootnoteCallString: exitFootnoteCallString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteDefinition: exitFootnoteDefinition\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown(options) {\n  // To do: next major: change default.\n  let firstLineBlank = false\n\n  if (options && options.firstLineBlank) {\n    firstLineBlank = true\n  }\n\n  return {\n    handlers: {footnoteDefinition, footnoteReference},\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['label', 'phrasing', 'reference']}]\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, state, info) {\n    const tracker = state.createTracker(info)\n    let value = tracker.move('[^')\n    const exit = state.enter('footnoteDefinition')\n    const subexit = state.enter('label')\n    value += tracker.move(\n      state.safe(state.associationId(node), {before: value, after: ']'})\n    )\n    subexit()\n\n    value += tracker.move(']:')\n\n    if (node.children && node.children.length > 0) {\n      tracker.shift(4)\n\n      value += tracker.move(\n        (firstLineBlank ? '\\n' : ' ') +\n          state.indentLines(\n            state.containerFlow(node, tracker.current()),\n            firstLineBlank ? mapAll : mapExceptFirst\n          )\n      )\n    }\n\n    exit()\n\n    return value\n  }\n}\n\n/** @type {Map} */\nfunction mapExceptFirst(line, index, blank) {\n  return index === 0 ? line : mapAll(line, index, blank)\n}\n\n/** @type {Map} */\nfunction mapAll(line, index, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","// To do: next major: remove.\n/**\n * @typedef {Options} MarkdownTableOptions\n *   Configuration.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [alignDelimiters=true]\n *   Whether to align the delimiters (default: `true`);\n *   they are aligned by default:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {ReadonlyArray<string | null | undefined> | string | null | undefined} [align]\n *   How to align columns (default: `''`);\n *   one style for all columns or styles for their respective columns;\n *   each style is either `'l'` (left), `'r'` (right), or `'c'` (center);\n *   other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left;\n *   *only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean | null | undefined} [delimiterEnd=true]\n *   Whether to end each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean | null | undefined} [delimiterStart=true]\n *   Whether to begin each row with the delimiter (default: `true`).\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean | null | undefined} [padding=true]\n *   Whether to add a space of padding between delimiters and cells\n *   (default: `true`).\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {((value: string) => number) | null | undefined} [stringLength]\n *   Function to detect the length of table cell content (optional);\n *   this is used when aligning the delimiters (`|`) between table cells;\n *   full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source;\n *   to fix this, you can pass this function,\n *   which receives the cell content and returns its “visible” size;\n *   note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @param {string} value\n *   Cell value.\n * @returns {number}\n *   Cell size.\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * Generate a markdown\n * ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables))\n * table.\n *\n * @param {ReadonlyArray<ReadonlyArray<string | null | undefined>>} table\n *   Table data (matrix of strings).\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Result.\n */\nexport function markdownTable(table, options) {\n  const settings = options || {}\n  // To do: next major: change to spread.\n  const align = (settings.align || []).concat()\n  const stringLength = settings.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (settings.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      settings.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (settings.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (settings.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (settings.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        settings.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(settings.alignDelimiters === false && cell === '') &&\n        (settings.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (settings.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (settings.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (settings.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        settings.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      settings.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string | null | undefined} [value]\n *   Value to serialize.\n * @returns {string}\n *   Result.\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string | null | undefined} value\n *   Value.\n * @returns {number}\n *   Alignment.\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n      ? 108 /* `l` */\n      : code === 82 /* `R` */ || code === 114 /* `r` */\n        ? 114 /* `r` */\n        : 0\n}\n","/**\n * @import {Blockquote, Parents} from 'mdast'\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @import {ConstructName, Unsafe} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @import {Break, Parents} from 'mdast'\n * @import {Info, State} from 'mdast-util-to-markdown'\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {Code, Parents} from 'mdast'\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Encode a code point as a character reference.\n *\n * @param {number} code\n *   Code point to encode.\n * @returns {string}\n *   Encoded character reference.\n */\nexport function encodeCharacterReference(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @import {EncodeSides} from '../types.js'\n */\n\nimport {classifyCharacter} from 'micromark-util-classify-character'\n\n/**\n * Check whether to encode (as a character reference) the characters\n * surrounding an attention run.\n *\n * Which characters are around an attention run influence whether it works or\n * not.\n *\n * See <https://github.com/orgs/syntax-tree/discussions/60> for more info.\n * See this markdown in a particular renderer to see what works:\n *\n * ```markdown\n * |                         | A (letter inside) | B (punctuation inside) | C (whitespace inside) | D (nothing inside) |\n * | ----------------------- | ----------------- | ---------------------- | --------------------- | ------------------ |\n * | 1 (letter outside)      | x*y*z             | x*.*z                  | x* *z                 | x**z               |\n * | 2 (punctuation outside) | .*y*.             | .*.*.                  | .* *.                 | .**.               |\n * | 3 (whitespace outside)  | x *y* z           | x *.* z                | x * * z               | x ** z             |\n * | 4 (nothing outside)     | *x*               | *.*                    | * *                   | **                 |\n * ```\n *\n * @param {number} outside\n *   Code point on the outer side of the run.\n * @param {number} inside\n *   Code point on the inner side of the run.\n * @param {'*' | '_'} marker\n *   Marker of the run.\n *   Underscores are handled more strictly (they form less often) than\n *   asterisks.\n * @returns {EncodeSides}\n *   Whether to encode characters.\n */\n// Important: punctuation must never be encoded.\n// Punctuation is solely used by markdown constructs.\n// And by encoding itself.\n// Encoding them will break constructs or double encode things.\nexport function encodeInfo(outside, inside, marker) {\n  const outsideKind = classifyCharacter(outside)\n  const insideKind = classifyCharacter(inside)\n\n  // Letter outside:\n  if (outsideKind === undefined) {\n    return insideKind === undefined\n      ? // Letter inside:\n        // we have to encode *both* letters for `_` as it is looser.\n        // it already forms for `*` (and GFMs `~`).\n        marker === '_'\n        ? {inside: true, outside: true}\n        : {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (letter, whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: encode outer (letter)\n          {inside: false, outside: true}\n  }\n\n  // Whitespace outside:\n  if (outsideKind === 1) {\n    return insideKind === undefined\n      ? // Letter inside: already forms.\n        {inside: false, outside: false}\n      : insideKind === 1\n        ? // Whitespace inside: encode both (whitespace).\n          {inside: true, outside: true}\n        : // Punctuation inside: already forms.\n          {inside: false, outside: false}\n  }\n\n  // Punctuation outside:\n  return insideKind === undefined\n    ? // Letter inside: already forms.\n      {inside: false, outside: false}\n    : insideKind === 1\n      ? // Whitespace inside: encode inner (whitespace).\n        {inside: true, outside: false}\n      : // Punctuation inside: already forms.\n        {inside: false, outside: false}\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Emphasis, Parents} from 'mdast'\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nemphasis.peek = emphasisPeek\n\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Html} from 'mdast'\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Image, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {ImageReference, Parents} from 'mdast'\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {InlineCode, Parents} from 'mdast'\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Link} from 'mdast'\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Link, Parents} from 'mdast'\n * @import {Exit} from '../types.js'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {LinkReference, Parents} from 'mdast'\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Strong} from 'mdast'\n */\n\nimport {checkStrong} from '../util/check-strong.js'\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {encodeInfo} from '../util/encode-info.js'\n\nstrong.peek = strongPeek\n\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  const before = tracker.move(marker + marker)\n\n  let between = tracker.move(\n    state.containerPhrasing(node, {\n      after: marker,\n      before,\n      ...tracker.current()\n    })\n  )\n  const betweenHead = between.charCodeAt(0)\n  const open = encodeInfo(\n    info.before.charCodeAt(info.before.length - 1),\n    betweenHead,\n    marker\n  )\n\n  if (open.inside) {\n    between = encodeCharacterReference(betweenHead) + between.slice(1)\n  }\n\n  const betweenTail = between.charCodeAt(between.length - 1)\n  const close = encodeInfo(info.after.charCodeAt(0), betweenTail, marker)\n\n  if (close.inside) {\n    between = between.slice(0, -1) + encodeCharacterReference(betweenTail)\n  }\n\n  const after = tracker.move(marker + marker)\n\n  exit()\n\n  state.attentionEncodeSurroundingInfo = {\n    after: close.outside,\n    before: open.outside\n  }\n  return before + between + after\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Code} from 'mdast'\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Definition, Parents} from 'mdast'\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Heading, Parents} from 'mdast'\n */\n\nimport {encodeCharacterReference} from '../util/encode-character-reference.js'\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value = encodeCharacterReference(value.charCodeAt(0)) + value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Heading} from 'mdast'\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {List, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @import {Info, Map, State} from 'mdast-util-to-markdown'\n * @import {ListItem, Parents} from 'mdast'\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Paragraph, Parents} from 'mdast'\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Root} from 'mdast'\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n\n  const container = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return container.call(state, node, info)\n}\n","/**\n * @import {Info, State} from 'mdast-util-to-markdown'\n * @import {Parents, Text} from 'mdast'\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @import {State} from 'mdast-util-to-markdown'\n * @import {Parents, ThematicBreak} from 'mdast'\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @import {Options, State} from 'mdast-util-to-markdown'\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @import {Code, ConstructRecord, Event, Extension, Previous, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { asciiAlpha, asciiAlphanumeric, asciiControl, markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n};\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n};\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n};\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n};\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n};\nconst wwwAutolink = {\n  name: 'wwwAutolink',\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n};\nconst protocolAutolink = {\n  name: 'protocolAutolink',\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n};\nconst emailAutolink = {\n  name: 'emailAutolink',\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n};\n\n/** @type {ConstructRecord} */\nconst text = {};\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  };\n}\n\n/** @type {Code} */\nlet code = 48;\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink;\n  code++;\n  if (code === 58) code = 65;else if (code === 91) code = 97;\n}\ntext[43] = emailAutolink;\ntext[45] = emailAutolink;\ntext[46] = emailAutolink;\ntext[95] = emailAutolink;\ntext[72] = [emailAutolink, protocolAutolink];\ntext[104] = [emailAutolink, protocolAutolink];\ntext[87] = [emailAutolink, wwwAutolink];\ntext[119] = [emailAutolink, wwwAutolink];\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this;\n  /** @type {boolean | undefined} */\n  let dot;\n  /** @type {boolean} */\n  let data;\n  return start;\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (!gfmAtext(code) || !previousEmail.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkEmail');\n    return atext(code);\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code);\n      return atext;\n    }\n    if (code === 64) {\n      effects.consume(code);\n      return emailDomain;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(emailDomainDotTrail, emailDomainAfter, emailDomainDot)(code);\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true;\n      effects.consume(code);\n      return emailDomain;\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code);\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code);\n    dot = true;\n    return emailDomain;\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail');\n      effects.exit('literalAutolink');\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this;\n  return wwwStart;\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (code !== 87 && code !== 119 || !previousWww.call(self, self.previous) || previousUnbalanced(self.events)) {\n      return nok(code);\n    }\n    effects.enter('literalAutolink');\n    effects.enter('literalAutolinkWww');\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(wwwPrefix, effects.attempt(domain, effects.attempt(path, wwwAfter), nok), nok)(code);\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this;\n  let buffer = '';\n  let seen = false;\n  return protocolStart;\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if ((code === 72 || code === 104) && previousProtocol.call(self, self.previous) && !previousUnbalanced(self.events)) {\n      effects.enter('literalAutolink');\n      effects.enter('literalAutolinkHttp');\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code);\n      effects.consume(code);\n      return protocolPrefixInside;\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase();\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code);\n        return protocolSlashesInside;\n      }\n    }\n    return nok(code);\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code);\n      if (seen) {\n        return afterProtocol;\n      }\n      seen = true;\n      return protocolSlashesInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null || asciiControl(code) || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || unicodePunctuation(code) ? nok(code) : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code);\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp');\n    effects.exit('literalAutolink');\n    return ok(code);\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0;\n  return wwwPrefixInside;\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++;\n      effects.consume(code);\n      return wwwPrefixInside;\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code);\n      return wwwPrefixAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code);\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment;\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment;\n  /** @type {boolean | undefined} */\n  let seen;\n  return domainInside;\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code);\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code) || code !== 45 && unicodePunctuation(code)) {\n      return domainAfter(code);\n    }\n    seen = true;\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true;\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment;\n      underscoreInLastSegment = undefined;\n    }\n    effects.consume(code);\n    return domainInside;\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code);\n    }\n    return ok(code);\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0;\n  let sizeClose = 0;\n  return pathInside;\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++;\n      effects.consume(code);\n      return pathInside;\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code);\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (code === 33 || code === 34 || code === 38 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 60 || code === 63 || code === 93 || code === 95 || code === 126) {\n      return effects.check(trail, ok, pathAtPunctuation)(code);\n    }\n    if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++;\n    }\n    effects.consume(code);\n    return pathInside;\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail;\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (code === 33 || code === 34 || code === 39 || code === 41 || code === 42 || code === 44 || code === 46 || code === 58 || code === 59 || code === 63 || code === 95 || code === 126) {\n      effects.consume(code);\n      return trail;\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code);\n      return trailCharacterReferenceStart;\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code);\n      return trailBracketAfter;\n    }\n    if (\n    // `<` is an end.\n    code === 60 ||\n    // So is whitespace.\n    code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (code === null || code === 40 || code === 91 || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n      return ok(code);\n    }\n    return trail(code);\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharacterReferenceInside(code) : nok(code);\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharacterReferenceInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code);\n      return trail;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return trailCharacterReferenceInside;\n    }\n\n    // It’s not a trail.\n    return nok(code);\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start;\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code);\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return code === null || code === 40 || code === 42 || code === 95 || code === 91 || code === 93 || code === 126 || markdownLineEndingOrSpace(code);\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code);\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code));\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return code === 43 || code === 45 || code === 46 || code === 95 || asciiAlphanumeric(code);\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length;\n  let result = false;\n  while (index--) {\n    const token = events[index][1];\n    if ((token.type === 'labelLink' || token.type === 'labelImage') && !token._balanced) {\n      result = true;\n      break;\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false;\n      break;\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true;\n  }\n  return result;\n}","/**\n * @import {Event, Exiter, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { blankLine } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n};\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        name: 'gfmFootnoteDefinition',\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        name: 'gfmFootnoteCall',\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        name: 'gfmPotentialFootnoteCall',\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  };\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {Token} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1];\n    if (token.type === \"labelImage\") {\n      labelStart = token;\n      break;\n    }\n\n    // Exit if we’ve walked far enough.\n    if (token.type === 'gfmFootnoteCall' || token.type === \"labelLink\" || token.type === \"label\" || token.type === \"image\" || token.type === \"link\") {\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code);\n    }\n    const id = normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    }));\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code);\n    }\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return ok(code);\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length;\n  /** @type {Token | undefined} */\n  let labelStart;\n\n  // Find an opening.\n  while (index--) {\n    if (events[index][1].type === \"labelImage\" && events[index][0] === 'enter') {\n      labelStart = events[index][1];\n      break;\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = \"data\";\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker';\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  };\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  };\n  // Increment the end 1 character.\n  marker.end.column++;\n  marker.end.offset++;\n  marker.end._bufferIndex++;\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  };\n  /** @type {Token} */\n  const chunk = {\n    type: \"chunkString\",\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  };\n\n  /** @type {Array<Event>} */\n  const replacement = [\n  // Take the `labelImageMarker` (now `data`, the `!`)\n  events[index + 1], events[index + 2], ['enter', call, context],\n  // The `[`\n  events[index + 3], events[index + 4],\n  // The `^`.\n  ['enter', marker, context], ['exit', marker, context],\n  // Everything in between.\n  ['enter', string, context], ['enter', chunk, context], ['exit', chunk, context], ['exit', string, context],\n  // The ending (`]`, properly parsed and labelled).\n  events[events.length - 2], events[events.length - 1], ['exit', call, context]];\n  events.splice(index, events.length - index + 1, ...replacement);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  let size = 0;\n  /** @type {boolean} */\n  let data;\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start;\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall');\n    effects.enter('gfmFootnoteCallLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallLabelMarker');\n    return callStart;\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code);\n    effects.enter('gfmFootnoteCallMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteCallMarker');\n    effects.enter('gfmFootnoteCallString');\n    effects.enter('chunkString').contentType = 'string';\n    return callData;\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteCallString');\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code);\n      }\n      effects.enter('gfmFootnoteCallLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteCallLabelMarker');\n      effects.exit('gfmFootnoteCall');\n      return ok;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? callEscape : callData;\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return callData;\n    }\n    return callData(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this;\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = []);\n  /** @type {string} */\n  let identifier;\n  let size = 0;\n  /** @type {boolean | undefined} */\n  let data;\n  return start;\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true;\n    effects.enter('gfmFootnoteDefinitionLabel');\n    effects.enter('gfmFootnoteDefinitionLabelMarker');\n    effects.consume(code);\n    effects.exit('gfmFootnoteDefinitionLabelMarker');\n    return labelAtMarker;\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionMarker');\n      effects.enter('gfmFootnoteDefinitionLabelString');\n      effects.enter('chunkString').contentType = 'string';\n      return labelInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n    // Too long.\n    size > 999 ||\n    // Closing brace with nothing.\n    code === 93 && !data ||\n    // Space or tab is not supported by GFM for some reason.\n    // `\\n` and `[` not being supported makes sense.\n    code === null || code === 91 || markdownLineEndingOrSpace(code)) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit('chunkString');\n      const token = effects.exit('gfmFootnoteDefinitionLabelString');\n      identifier = normalizeIdentifier(self.sliceSerialize(token));\n      effects.enter('gfmFootnoteDefinitionLabelMarker');\n      effects.consume(code);\n      effects.exit('gfmFootnoteDefinitionLabelMarker');\n      effects.exit('gfmFootnoteDefinitionLabel');\n      return labelAfter;\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true;\n    }\n    size++;\n    effects.consume(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker');\n      effects.consume(code);\n      effects.exit('definitionMarker');\n      if (!defined.includes(identifier)) {\n        defined.push(identifier);\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(effects, whitespaceAfter, 'gfmFootnoteDefinitionWhitespace');\n    }\n    return nok(code);\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok));\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition');\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, 'gfmFootnoteDefinitionIndent', 4 + 1);\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === 'gfmFootnoteDefinitionIndent' && tail[2].sliceSerialize(tail[1], true).length === 4 ? ok(code) : nok(code);\n  }\n}","/**\n * @import {Options} from 'micromark-extension-gfm-strikethrough'\n * @import {Event, Extension, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {};\n  let single = options_.singleTilde;\n  const tokenizer = {\n    name: 'strikethrough',\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  };\n  if (single === null || single === undefined) {\n    single = true;\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  };\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1;\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (events[index][0] === 'enter' && events[index][1].type === 'strikethroughSequenceTemporary' && events[index][1]._close) {\n        let open = index;\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (events[open][0] === 'exit' && events[open][1].type === 'strikethroughSequenceTemporary' && events[open][1]._open &&\n          // If the sizes are the same:\n          events[index][1].end.offset - events[index][1].start.offset === events[open][1].end.offset - events[open][1].start.offset) {\n            events[index][1].type = 'strikethroughSequence';\n            events[open][1].type = 'strikethroughSequence';\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            };\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            };\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [['enter', strikethrough, context], ['enter', events[open][1], context], ['exit', events[open][1], context], ['enter', text, context]];\n            const insideSpan = context.parser.constructs.insideSpan.null;\n            if (insideSpan) {\n              // Between.\n              splice(nextEvents, nextEvents.length, 0, resolveAll(insideSpan, events.slice(open + 1, index), context));\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [['exit', text, context], ['enter', events[index][1], context], ['exit', events[index][1], context], ['exit', strikethrough, context]]);\n            splice(events, open - 1, index - open + 3, nextEvents);\n            index = open + nextEvents.length - 2;\n            break;\n          }\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = \"data\";\n      }\n    }\n    return events;\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous;\n    const events = this.events;\n    let size = 0;\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      if (previous === 126 && events[events.length - 1][1].type !== \"characterEscape\") {\n        return nok(code);\n      }\n      effects.enter('strikethroughSequenceTemporary');\n      return more(code);\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous);\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code);\n        effects.consume(code);\n        size++;\n        return more;\n      }\n      if (size < 2 && !single) return nok(code);\n      const token = effects.exit('strikethroughSequenceTemporary');\n      const after = classifyCharacter(code);\n      token._open = !after || after === 2 && Boolean(before);\n      token._close = !before || before === 2 && Boolean(after);\n      return ok(code);\n    }\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = [];\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImplementation(this, index, remove, add);\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImplementation(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0];\n    });\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return;\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length;\n    /** @type {Array<Array<Event>>} */\n    const vecs = [];\n    while (index > 0) {\n      index -= 1;\n      vecs.push(events.slice(this.map[index][0] + this.map[index][1]), this.map[index][2]);\n\n      // Truncate rest.\n      events.length = this.map[index][0];\n    }\n    vecs.push(events.slice());\n    events.length = 0;\n    let slice = vecs.pop();\n    while (slice) {\n      for (const element of slice) {\n        events.push(element);\n      }\n      slice = vecs.pop();\n    }\n\n    // Truncate everything.\n    this.map.length = 0;\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImplementation(editMap, at, remove, add) {\n  let index = 0;\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return;\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove;\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add);\n      // }\n\n      return;\n    }\n    index += 1;\n  }\n  editMap.map.push([at, remove, add]);\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }","/**\n * @import {Event} from 'micromark-util-types'\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false;\n  /** @type {Array<Align>} */\n  const align = [];\n  while (index < events.length) {\n    const event = events[index];\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(events[index + 1][1].type === 'tableDelimiterMarker' ? 'left' : 'none');\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1;\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right';\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break;\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true;\n    }\n    index += 1;\n  }\n  return align;\n}","/**\n * @import {Event, Extension, Point, Resolver, State, Token, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nimport { EditMap } from './edit-map.js';\nimport { gfmTableAlign } from './infer.js';\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        name: 'table',\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  let sizeB = 0;\n  /** @type {boolean | undefined} */\n  let seen;\n  return start;\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1;\n    while (index > -1) {\n      const type = self.events[index][1].type;\n      if (type === \"lineEnding\" ||\n      // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n      type === \"linePrefix\") index--;else break;\n    }\n    const tail = index > -1 ? self.events[index][1].type : null;\n    const next = tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore;\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    return next(code);\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead');\n    effects.enter('tableRow');\n    return headRowStart(code);\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code);\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true;\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1;\n    return headRowBreak(code);\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0;\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true;\n        effects.exit('tableRow');\n        effects.enter(\"lineEnding\");\n        effects.consume(code);\n        effects.exit(\"lineEnding\");\n        return headDelimiterStart;\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code);\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, \"whitespace\")(code);\n    }\n    sizeB += 1;\n    if (seen) {\n      seen = false;\n      // Header cell count.\n      size += 1;\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      // Whether a delimiter was seen.\n      seen = true;\n      return headRowBreak;\n    }\n\n    // Anything else is cell data.\n    effects.enter(\"data\");\n    return headRowData(code);\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return headRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? headRowEscape : headRowData;\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return headRowData;\n    }\n    return headRowData(code);\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false;\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    effects.enter('tableDelimiterRow');\n    // Track if we’ve seen a `:` or `|`.\n    seen = false;\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return headDelimiterBefore(code);\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code);\n    }\n    if (code === 124) {\n      seen = true;\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return headDelimiterCellBefore;\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, \"whitespace\")(code);\n    }\n    return headDelimiterValueBefore(code);\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1;\n      seen = true;\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterLeftAlignmentAfter;\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1;\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller');\n      return headDelimiterFiller(code);\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return headDelimiterFiller;\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true;\n      effects.exit('tableDelimiterFiller');\n      effects.enter('tableDelimiterMarker');\n      effects.consume(code);\n      effects.exit('tableDelimiterMarker');\n      return headDelimiterRightAlignmentAfter;\n    }\n    effects.exit('tableDelimiterFiller');\n    return headDelimiterRightAlignmentAfter(code);\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, \"whitespace\")(code);\n    }\n    return headDelimiterCellAfter(code);\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code);\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow');\n      effects.exit('tableHead');\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code);\n    }\n    return headDelimiterNok(code);\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code);\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow');\n    return bodyRowBreak(code);\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider');\n      effects.consume(code);\n      effects.exit('tableCellDivider');\n      return bodyRowBreak;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow');\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, \"whitespace\")(code);\n    }\n\n    // Anything else is cell content.\n    effects.enter(\"data\");\n    return bodyRowData(code);\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"data\");\n      return bodyRowBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? bodyRowEscape : bodyRowData;\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code);\n      return bodyRowData;\n    }\n    return bodyRowData(code);\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1;\n  let inFirstCellAwaitingPipe = true;\n  /** @type {RowKind} */\n  let rowKind = 0;\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0];\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0];\n  let afterHeadAwaitingFirstBodyRow = false;\n  let lastTableEnd = 0;\n  /** @type {Token | undefined} */\n  let currentTable;\n  /** @type {Token | undefined} */\n  let currentBody;\n  /** @type {Token | undefined} */\n  let currentCell;\n  const map = new EditMap();\n  while (++index < events.length) {\n    const event = events[index];\n    const token = event[1];\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false;\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n          currentBody = undefined;\n          lastTableEnd = 0;\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        };\n        map.add(index, 0, [['enter', currentTable, context]]);\n      } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n        inFirstCellAwaitingPipe = true;\n        currentCell = undefined;\n        lastCell = [0, 0, 0, 0];\n        cell = [0, index + 1, 0, 0];\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false;\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          };\n          map.add(index, 0, [['enter', currentBody, context]]);\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1;\n      }\n      // Cell data.\n      else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n        inFirstCellAwaitingPipe = false;\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n            lastCell = [0, 0, 0, 0];\n          }\n          cell[2] = index;\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false;\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1];\n            currentCell = flushCell(map, context, lastCell, rowKind, undefined, currentCell);\n          }\n          lastCell = cell;\n          cell = [lastCell[1], index, 0, 0];\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true;\n      lastTableEnd = index;\n    } else if (token.type === 'tableRow' || token.type === 'tableDelimiterRow') {\n      lastTableEnd = index;\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1];\n        currentCell = flushCell(map, context, lastCell, rowKind, index, currentCell);\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell);\n      }\n      rowKind = 0;\n    } else if (rowKind && (token.type === \"data\" || token.type === 'tableDelimiterMarker' || token.type === 'tableDelimiterFiller')) {\n      cell[3] = index;\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody);\n  }\n  map.consume(context.events);\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1;\n  while (++index < context.events.length) {\n    const event = context.events[index];\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index);\n    }\n  }\n  return events;\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName = rowKind === 1 ? 'tableHeader' : rowKind === 2 ? 'tableDelimiter' : 'tableData';\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent';\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]));\n    map.add(range[0], 0, [['exit', previousCell, context]]);\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1]);\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  };\n  map.add(range[1], 0, [['enter', previousCell, context]]);\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2]);\n    const relatedEnd = getPoint(context.events, range[3]);\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    };\n    map.add(range[2], 0, [['enter', valueToken, context]]);\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]];\n      const end = context.events[range[3]];\n      start[1].end = Object.assign({}, end[1].end);\n      start[1].type = \"chunkText\";\n      start[1].contentType = \"text\";\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1;\n        const b = range[3] - range[2] - 1;\n        map.add(a, b, []);\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]]);\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd));\n    map.add(rowEnd, 0, [['exit', previousCell, context]]);\n    previousCell = undefined;\n  }\n  return previousCell;\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = [];\n  const related = getPoint(context.events, index);\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related);\n    exits.push(['exit', tableBody, context]);\n  }\n  table.end = Object.assign({}, related);\n  exits.push(['exit', table, context]);\n  map.add(index + 1, 0, exits);\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index];\n  const side = event[0] === 'enter' ? 'start' : 'end';\n  return event[1][side];\n}","/**\n * @import {Extension, State, TokenizeContext, Tokenizer} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownLineEndingOrSpace, markdownSpace } from 'micromark-util-character';\nconst tasklistCheck = {\n  name: 'tasklistCheck',\n  tokenize: tokenizeTasklistCheck\n};\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  };\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this;\n  return open;\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n    // Exit if there’s stuff before.\n    self.previous !== null ||\n    // Exit if not in the first content that is the first child of a list\n    // item.\n    !self._gfmTasklistFirstContentOfListItem) {\n      return nok(code);\n    }\n    effects.enter('taskListCheck');\n    effects.enter('taskListCheckMarker');\n    effects.consume(code);\n    effects.exit('taskListCheckMarker');\n    return inside;\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueUnchecked');\n      return close;\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked');\n      effects.consume(code);\n      effects.exit('taskListCheckValueChecked');\n      return close;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker');\n      effects.consume(code);\n      effects.exit('taskListCheckMarker');\n      effects.exit('taskListCheck');\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code);\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check({\n        tokenize: spaceThenNonSpace\n      }, ok, nok)(code);\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, \"whitespace\");\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code);\n  }\n}","/**\n * @import {Root} from 'mdast'\n * @import {Options} from 'remark-gfm'\n * @import {} from 'remark-parse'\n * @import {} from 'remark-stringify'\n * @import {Processor} from 'unified'\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor<Root>} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @import {Extension as FromMarkdownExtension} from 'mdast-util-from-markdown'\n * @import {Options} from 'mdast-util-gfm'\n * @import {Options as ToMarkdownExtension} from 'mdast-util-to-markdown'\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(options),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","import { Link, graphql, type HeadFC } from \"gatsby\";\nimport {\n\tBox,\n\tContainer,\n\tHeading,\n\tText,\n\tButton,\n\tVStack,\n\tImage,\n} from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport React from \"react\";\n\nconst BlogPostTemplate = ({ data }: { data: Queries.BlogPostBySlugQuery }) => {\n\tconst post = data.markdownRemark;\n\tconst accentColor = \"blue.600\";\n\n\treturn (\n\t\t<Container maxW=\"4xl\" py={10}>\n\t\t\t<VStack spacing={8} align=\"stretch\">\n\t\t\t\t<article>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<Heading as=\"h1\" mb={2} color={accentColor}>\n\t\t\t\t\t\t\t{post.frontmatter.title}\n\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t<Text fontSize=\"sm\" color=\"gray.500\">\n\t\t\t\t\t\t\t{post.frontmatter.date} • {Math.ceil(post.wordCount.words / 200)}{\" \"}\n\t\t\t\t\t\t\tmin read\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text fontSize=\"sm\" color=\"gray.600\" mb={8}>\n\t\t\t\t\t\t\t{post.frontmatter.author || \"Retire.Guru Team\"}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</header>\n\t\t\t\t\t{post.frontmatter.featuredImage?.publicURL && (\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tsrc={post.frontmatter.featuredImage.publicURL}\n\t\t\t\t\t\t\talt={post.frontmatter.title}\n\t\t\t\t\t\t\tborderRadius=\"lg\"\n\t\t\t\t\t\t\tw=\"100%\"\n\t\t\t\t\t\t\th=\"auto\"\n\t\t\t\t\t\t\tobjectFit=\"contain\"\n\t\t\t\t\t\t\tmb={8}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Box\n\t\t\t\t\t\tclassName=\"blog-content\"\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\"h2, h3, h4, h5, h6\": {\n\t\t\t\t\t\t\t\tmt: 8,\n\t\t\t\t\t\t\t\tmb: 4,\n\t\t\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tp: {\n\t\t\t\t\t\t\t\tmb: 4,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tul: {\n\t\t\t\t\t\t\t\tpl: 8,\n\t\t\t\t\t\t\t\tmb: 4,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tli: {\n\t\t\t\t\t\t\t\tmb: 2,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tblockquote: {\n\t\t\t\t\t\t\t\tpl: 4,\n\t\t\t\t\t\t\t\tborderLeftWidth: \"4px\",\n\t\t\t\t\t\t\t\tborderLeftColor: accentColor,\n\t\t\t\t\t\t\t\tfontStyle: \"italic\",\n\t\t\t\t\t\t\t\tmb: 4,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ReactMarkdown remarkPlugins={[remarkGfm]}>\n\t\t\t\t\t\t\t{post.rawMarkdownBody}\n\t\t\t\t\t\t</ReactMarkdown>\n\t\t\t\t\t</Box>\n\t\t\t\t</article>\n\n\t\t\t\t<Box>\n\t\t\t\t\t<Button as={Link} to=\"/blog\" colorScheme=\"blue\" variant=\"outline\">\n\t\t\t\t\t\tBack to Blog\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t</VStack>\n\t\t</Container>\n\t);\n};\n\nexport default BlogPostTemplate;\n\nexport const Head: HeadFC<Queries.BlogPostBySlugQuery> = ({ data }) => {\n\tconst post = data.markdownRemark;\n\tconst siteTitleSuffix = \"Retire.Guru\";\n\tconst title = post?.frontmatter?.title\n\t\t? `${post.frontmatter.title} | ${siteTitleSuffix}`\n\t\t: siteTitleSuffix;\n\tconst description =\n\t\tpost?.frontmatter?.description ??\n\t\tpost?.excerpt ??\n\t\t\"Insights and guidance from Retire.Guru.\";\n\tconst image = post?.frontmatter?.featuredImage?.publicURL ?? undefined;\n\n\treturn (\n\t\t<>\n\t\t\t<title>{title}</title>\n\t\t\t<meta name=\"description\" content={description} />\n\t\t\t<meta property=\"og:title\" content={title} />\n\t\t\t<meta property=\"og:description\" content={description} />\n\t\t\t{image ? <meta property=\"og:image\" content={image} /> : null}\n\t\t\t<meta name=\"twitter:card\" content=\"summary_large_image\" />\n\t\t\t<meta name=\"twitter:title\" content={title} />\n\t\t\t<meta name=\"twitter:description\" content={description} />\n\t\t\t{image ? <meta name=\"twitter:image\" content={image} /> : null}\n\t\t</>\n\t);\n};\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($id: String!, $previousPostId: String, $nextPostId: String) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      rawMarkdownBody\n      wordCount { words }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        author\n        featuredImage { publicURL }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","style_to_object_1","this","__importDefault","mod","__esModule","utilities_1","StyleToJS","style","output","default","property","camelCase","useImage","props","loading","srcSet","onLoad","onError","crossOrigin","sizes","ignoreFallback","status","setStatus","useState","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","shouldShowFallbackImage","fallbackStrategy","NativeImage","ref","htmlWidth","htmlHeight","alt","rest","jsx","width","height","displayName","fallbackSrc","fallback","align","fit","referrerPolicy","shouldIgnoreFallbackImage","showFallbackImage","shared","objectFit","objectPosition","omit","as","className","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","end","source","content","errorsList","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","decl","decls","declarations","VStack","direction","CUSTOM_PROPERTY_REGEX","HYPHEN_REGEX","NO_HYPHEN_REGEX","VENDOR_PREFIX_REGEX","MS_VENDOR_PREFIX_REGEX","capitalize","character","toUpperCase","trimHyphen","prefix","concat","test","skipCamelCase","toLowerCase","reactCompat","iterator","styleObject","inline_style_parser_1","hasIterator","forEach","Heading","styles","h2","cx","__css","ok","unreachable","nameRe","nameReJsx","emptyOptions","empty","Schema","normal","space","merge","definitions","definition","assign","normalize","undefined","Info","attribute","booleanish","boolean","commaOrSpaceSeparated","commaSeparated","defined","mustUseProperty","number","overloadedBoolean","spaceSeparated","powers","increment","checks","keys","DefinedInfo","mask","index","super","mark","check","values","create","properties","normals","entries","info","transform","attributes","includes","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","_","caseSensitiveTransform","caseInsensitiveTransform","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","cols","colSpan","contentEditable","controls","controlsList","coords","data","dateTime","decoding","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","slot","span","spellCheck","srcDoc","srcLang","step","tabIndex","title","translate","typeMustMatch","useMap","wrap","writingSuggestions","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cy","d","defaultAction","descent","diffuseConstant","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlns","xmlnsxlink","xmlnsXLink","xml","xmlBase","xmlLang","xmlSpace","cap","dash","valid","kebab","$0","camelcase","hastToReact","pointEnd","point","pointStart","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","cause","message","ruleId","indexOf","parent","fatal","file","stack","actual","expected","note","url","own","emptyMap","Map","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","isStaticChildren","children","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","state","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","schema","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","tagName","findComponentFromName","alignValue","createProperty","has","createElementProps","createChildren","child","thing","addNode","addChildren","pop","estree","expression","body","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","count","get","set","Type","dashes","find","Number","isNaN","settings","join","padRight","padLeft","parseStyle","String","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","split","computed","Boolean","optional","toDash","urlAttributes","icon","includeImageAlt","includeHtml","splice","remove","items","parameters","chunkStart","unshift","SpliceBuffer","initial","left","right","RangeError","shift","setCursor","stop","POSITIVE_INFINITY","reverse","deleteCount","Math","trunc","removed","chunkedPush","item","pushMany","unshiftMany","n","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","events","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","token","context","startPosition","startPositions","tokenizer","parser","_contentTypeTextTrailing","childEvents","gaps","stream","previous","adjust","breaks","sliceStream","next","defineSkip","_gfmTasklistFirstContentOfListItem","write","combineExtensions","extensions","all","syntaxExtension","extension","hook","constructs","existing","before","add","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","limit","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","endOfFile","seen","entry","nok","document","disable","null","blankLine","partial","after","resolve","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","resolveAllLineSuffixes","notText","atBreak","extraResolver","chunks","tabs","bufferIndex","chunk","charCodeAt","_bufferIndex","_index","thematicBreak","marker","sequence","onBlank","notBlank","furtherBlankLines","initialBlankLine","notInCurrentItem","indentConstruct","initialSize","atMarker","inside","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","resolveTo","heading","paragraph","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","called","labelEnd","newEvents","close","_inactive","_balanced","group","insideSpan","labelStart","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","openingSequence","closingSequence","use","nextEvents","_close","_open","movePoint","attentionMarkers","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","returnState","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","between","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","constructFactory","construct","addResult","onsuccessfulcheck","accountForPotentialSkip","fields","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","sliceChunks","chunkIndex","go","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","map","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","search","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$1","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","lastIndex","ceil","preprocess","combined","remarkParse","doc","env","globalThis","deserialize","serialized","$","out","unpair","Date","flags","RegExp","BigInt","Uint8Array","DataView","deserializer","EMPTY","asString","shouldSkip","TYPE","serialize","json","lossy","strict","pair","valueOf","toJSON","toISOString","serializer","structuredClone","any","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","apply","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","visitParents","visitor","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","revert","subtype","suffix","contents","listItemLoose","trimLines","last","trimLine","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","handlers","handle","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","bail","getPrototypeOf","Symbol","toStringTag","trough","fns","pipeline","middlewareIndex","callback","middleware","wrapped","fnExpectsCallback","done","then","middelware","minpath","basename","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","JSON","stringify","minproc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","setPrototypeOf","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","parse","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","processor","createProcessor","createFile","post","rehypePlugins","remarkPlugins","remarkRehypeOptions","allowedElements","allowElement","disallowedElements","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","deprecation","colon","questionMark","numberSign","ccount","findAndReplace","ignored","pairs","tupleOrList","tuple","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","input","global","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findUrl","findEmail","domain","parts","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","atext","email","enterFootnoteCallString","enterFootnoteCall","enterFootnoteDefinitionLabelString","enterFootnoteDefinition","exitFootnoteCallString","exitFootnoteCall","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","tracker","createTracker","move","subexit","safe","associationId","gfmFootnoteToMarkdown","firstLineBlank","indentLines","containerFlow","mapAll","mapExceptFirst","unsafe","blank","peek","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","patternInScope","listInScope","none","_1","checkQuote","quote","encodeCharacterReference","encodeInfo","outside","outsideKind","insideKind","checkEmphasis","betweenHead","betweenTail","attentionEncodeSurroundingInfo","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","rule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","repeat","substring","longestStreak","encode","rank","literalWithBreak","setext","formatHeadingAsSetext","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","some","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","row","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","sibling","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharacterReferenceStart","trailBracketAfter","trailCharacterReferenceInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","replacement","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","strikethrough","EditMap","editMap","at","addImplementation","sort","a","b","vecs","element","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","tasklistCheck","spaceThenNonSpace","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","gfm","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteCallString","gfmFootnoteCall","gfmFootnoteDefinitionLabelString","gfmFootnoteDefinition","tableData","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","_ref","_post$frontmatter$fea","markdownRemark","accentColor","React","Container","maxW","py","mb","frontmatter","Text","date","wordCount","words","author","featuredImage","publicURL","borderRadius","w","h","Box","sx","mt","p","ul","pl","li","borderLeftWidth","borderLeftColor","ReactMarkdown","rawMarkdownBody","Button","Link","colorScheme","variant","Head","_ref2","_post$frontmatter","_ref3","_post$frontmatter$des","_post$frontmatter2","_post$frontmatter$fea2","_post$frontmatter3","_post$frontmatter3$fe","siteTitleSuffix","description","excerpt"],"sourceRoot":""}