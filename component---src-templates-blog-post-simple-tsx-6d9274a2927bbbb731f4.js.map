{"version":3,"file":"component---src-templates-blog-post-simple-tsx-6d9274a2927bbbb731f4.js","mappings":"wNAKA,MAAMA,GAAS,E,QAAA,GAAW,CAACC,EAAOC,KAAwB,IAAAC,KAAI,IAAO,CAAEC,MAAO,YAAaH,EAAOI,UAAW,SAAUH,SACvHF,EAAOM,YAAc,Q,sGCFrB,SAASC,EAASN,GAChB,MAAM,QACJO,EAAO,IACPC,EAAG,OACHC,EAAM,OACNC,EAAM,QACNC,EAAO,YACPC,EAAW,MACXC,EAAK,eACLC,GACEd,GACGe,EAAQC,IAAa,IAAAC,UAAS,YACrC,IAAAC,WAAU,KACRF,EAAUR,EAAM,UAAY,YAC3B,CAACA,IACJ,MAAMW,GAAW,IAAAC,QAAO,MAClBC,GAAO,IAAAC,aAAY,KACvB,IAAKd,EACH,OACFe,IACA,MAAMC,EAAM,IAAIC,MAChBD,EAAIhB,IAAMA,EACNI,IACFY,EAAIZ,YAAcA,GAChBH,IACFe,EAAIE,OAASjB,GACXI,IACFW,EAAIX,MAAQA,GACVN,IACFiB,EAAIjB,QAAUA,GAChBiB,EAAIG,OAAUC,IACZL,IACAP,EAAU,UACVN,IAASkB,IAEXJ,EAAIK,QAAWC,IACbP,IACAP,EAAU,UACVL,IAAUmB,IAEZX,EAASY,QAAUP,GAClB,CAAChB,EAAKI,EAAaH,EAAQI,EAAOH,EAAQC,EAASJ,IAChDgB,EAAQ,KACRJ,EAASY,UACXZ,EAASY,QAAQJ,OAAS,KAC1BR,EAASY,QAAQF,QAAU,KAC3BV,EAASY,QAAU,OAavB,OAVA,OAAoB,KAClB,IAAIjB,EAKJ,MAHe,YAAXC,GACFM,IAEK,KACLE,MAED,CAACR,EAAQM,EAAMP,IACXA,EAAiB,SAAWC,CACrC,CACA,MAAMiB,EAA0B,CAACjB,EAAQkB,IAAgC,WAAXlB,GAA4C,sBAArBkB,GAAuD,WAAXlB,GAA4C,YAArBkB,C,sHCzDxJ,MAAMC,GAAU,OACd,SAAkBlC,EAAOC,GACvB,MAAMkC,GAAS,OAAe,UAAWnC,IACnC,UAAEoC,KAAcC,IAAS,OAAiBrC,GAChD,OAAuB,IAAAE,KACrB,IAAOoC,GACP,CACErC,MACAmC,WAAW,IAAAG,IAAG,iBAAkBvC,EAAMoC,cACnCC,EACHG,MAAOL,GAGb,GAEFD,EAAQ7B,YAAc,S,2HC4DtB,UAvEyBoC,IAAc,IAAAC,EAAA,IAAb,KAAEC,GAAMF,EAChC,MAAMG,EAAOD,EAAKE,gBACZ,SAAEC,EAAQ,KAAEC,GAASJ,EACrBK,EAAc,WAEpB,OACEC,EAAAA,cAACC,EAAAA,EAAS,CAACC,KAAK,MAAMC,GAAI,IACxBH,EAAAA,cAAClD,EAAAA,EAAM,CAACsD,QAAS,EAAGlD,MAAM,WACxB8C,EAAAA,cAAA,eACEA,EAAAA,cAAA,cACEA,EAAAA,cAACf,EAAAA,EAAO,CAACoB,GAAG,KAAKC,GAAI,EAAGC,MAAOR,GAC5BJ,EAAKa,YAAYC,OAEpBT,EAAAA,cAACU,EAAAA,EAAI,CAACC,SAAS,KAAKJ,MAAM,YACvBZ,EAAKa,YAAYI,KAAK,MAAIC,KAAKC,KAAKnB,EAAKoB,UAAUC,MAAQ,KAAK,aAEnEhB,EAAAA,cAACU,EAAAA,EAAI,CAACC,SAAS,KAAKJ,MAAM,WAAWD,GAAI,GACtCX,EAAKa,YAAYS,QAAU,sBAGD,QAA9BxB,EAAAE,EAAKa,YAAYU,qBAAa,IAAAzB,OAAA,EAA9BA,EAAgC0B,YAC/BnB,EAAAA,cAACxB,EAAAA,EAAK,CACJjB,IAAKoC,EAAKa,YAAYU,cAAcC,UACpCC,IAAKzB,EAAKa,YAAYC,MACtBY,aAAa,KACbC,EAAE,OACFC,EAAE,OACFC,UAAU,UACVlB,GAAI,IAGRN,EAAAA,cAACyB,EAAAA,EAAG,CACFtC,UAAU,eACVuC,GAAI,CACF,qBAAsB,CACpBC,GAAI,EACJrB,GAAI,EACJsB,WAAY,QAEdC,EAAG,CACDvB,GAAI,GAENwB,GAAI,CACFC,GAAI,EACJzB,GAAI,GAEN0B,GAAI,CACF1B,GAAI,GAEN2B,WAAY,CACVF,GAAI,EACJG,gBAAiB,MACjBC,gBAAiBpC,EACjBqC,UAAW,SACX9B,GAAI,IAGR+B,wBAAyB,CAAEC,OAAQ3C,EAAK4C,SAI5CvC,EAAAA,cAACyB,EAAAA,EAAG,KACFzB,EAAAA,cAACwC,EAAAA,EAAM,CAACnC,GAAIoC,EAAAA,GAAMC,GAAG,QAAQC,YAAY,OAAOC,QAAQ,WAAU,mB,yFCtE5E,MAAMC,GAAc,OAAW,SAAsB9F,EAAOC,GAC1D,MAAM,UAAE8F,EAAS,WAAEC,EAAU,IAAE3B,KAAQhC,GAASrC,EAChD,OAAuB,IAAAE,KAAI,MAAO,CAAE+F,MAAOF,EAAWG,OAAQF,EAAY/F,MAAKoE,SAAQhC,GACzF,GACAyD,EAAYzF,YAAc,c,uBCA1B,MAAMoB,GAAQ,OAAW,SAAgBzB,EAAOC,GAC9C,MAAM,YACJkG,EAAW,SACXC,EAAQ,IACR5F,EAAG,OACHC,EAAM,MACNN,EAAK,IACLkG,EAAG,QACH9F,EAAO,eACPO,EAAc,YACdF,EAAW,iBACXqB,EAAmB,oBAAmB,eACtCqE,KACGjE,GACDrC,EAEEuG,EAAuC,MAAXhG,GAClCO,UAFyC,IAAhBqF,QAAuC,IAAbC,GAI7CrF,GAAS,OAAS,IACnBf,EACHY,cACAE,eAAgByF,IAEZC,GAAoB,OAAwBzF,EAAQkB,GACpDwE,EAAS,CACbxG,MACAwE,UAAW4B,EACXK,eAAgBvG,KACboG,EAA4BlE,GAAO,EAAAsE,EAAA,GAAKtE,EAAM,CAAC,UAAW,YAE/D,OAAImE,EACEJ,IAEmB,IAAAlG,KACrB,IAAOsB,IACP,CACE8B,GAAIwC,EACJ1D,UAAW,4BACX5B,IAAK2F,KACFM,KAIc,IAAAvG,KACrB,IAAOsB,IACP,CACE8B,GAAIwC,EACJtF,MACAC,SACAG,cACAL,UACA+F,iBACAlE,UAAW,kBACRqE,GAGT,GACAhF,EAAMpB,YAAc,O","sources":["webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/react/dist/esm/stack/v-stack.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/react/dist/esm/image/use-image.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/react/dist/esm/typography/heading.mjs","webpack://gatsby-starter-chakra-ui-type-script/./src/templates/blog-post-simple.tsx","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/react/dist/esm/image/native-image.mjs","webpack://gatsby-starter-chakra-ui-type-script/./node_modules/@chakra-ui/react/dist/esm/image/image.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Stack } from './stack.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst VStack = forwardRef((props, ref) => /* @__PURE__ */ jsx(Stack, { align: \"center\", ...props, direction: \"column\", ref }));\nVStack.displayName = \"VStack\";\n\nexport { VStack };\n","'use client';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\nimport { useState, useEffect, useRef, useCallback } from 'react';\n\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef(null);\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad?.(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError?.(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nconst shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport { shouldShowFallbackImage, useImage };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Heading = forwardRef(\n  function Heading2(props, ref) {\n    const styles = useStyleConfig(\"Heading\", props);\n    const { className, ...rest } = omitThemingProps(props);\n    return /* @__PURE__ */ jsx(\n      chakra.h2,\n      {\n        ref,\n        className: cx(\"chakra-heading\", props.className),\n        ...rest,\n        __css: styles\n      }\n    );\n  }\n);\nHeading.displayName = \"Heading\";\n\nexport { Heading };\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport {\n  Box,\n  Container,\n  Heading,\n  Text,\n  Button,\n  VStack,\n  Image,\n} from \"@chakra-ui/react\"\n\nconst BlogPostTemplate = ({ data }) => {\n  const post = data.markdownRemark\n  const { previous, next } = data\n  const accentColor = \"blue.600\"\n\n  return (\n    <Container maxW=\"4xl\" py={10}>\n      <VStack spacing={8} align=\"stretch\">\n        <article>\n          <header>\n            <Heading as=\"h1\" mb={2} color={accentColor}>\n              {post.frontmatter.title}\n            </Heading>\n            <Text fontSize=\"sm\" color=\"gray.500\">\n              {post.frontmatter.date} â€¢ {Math.ceil(post.wordCount.words / 200)} min read\n            </Text>\n            <Text fontSize=\"sm\" color=\"gray.600\" mb={8}>\n              {post.frontmatter.author || \"Retire.Guru Team\"}\n            </Text>\n          </header>\n          {post.frontmatter.featuredImage?.publicURL && (\n            <Image\n              src={post.frontmatter.featuredImage.publicURL}\n              alt={post.frontmatter.title}\n              borderRadius=\"lg\"\n              w=\"100%\"\n              h=\"auto\"\n              objectFit=\"contain\"\n              mb={8}\n            />\n          )}\n          <Box\n            className=\"blog-content\"\n            sx={{\n              \"h2, h3, h4, h5, h6\": {\n                mt: 8,\n                mb: 4,\n                fontWeight: \"bold\",\n              },\n              p: {\n                mb: 4,\n              },\n              ul: {\n                pl: 8,\n                mb: 4,\n              },\n              li: {\n                mb: 2,\n              },\n              blockquote: {\n                pl: 4,\n                borderLeftWidth: \"4px\",\n                borderLeftColor: accentColor,\n                fontStyle: \"italic\",\n                mb: 4,\n              },\n            }}\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n        </article>\n        \n        <Box>\n          <Button as={Link} to=\"/blog\" colorScheme=\"blue\" variant=\"outline\">\n            Back to Blog\n          </Button>\n        </Box>\n      </VStack>\n    </Container>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($id: String!, $previousPostId: String, $nextPostId: String) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      wordCount { words }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        author\n        featuredImage { publicURL }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ jsx(\"img\", { width: htmlWidth, height: htmlHeight, ref, alt, ...rest });\n});\nNativeImage.displayName = \"NativeImage\";\n\nexport { NativeImage };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omit } from '@chakra-ui/utils';\nimport { NativeImage } from './native-image.mjs';\nimport { useImage, shouldShowFallbackImage } from './use-image.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || // use can opt out of fallback image\n  ignoreFallback || // if the user doesn't provide any kind of fallback we should ignore it\n  !providedFallback;\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport { Image };\n"],"names":["VStack","props","ref","jsx","align","direction","displayName","useImage","loading","src","srcSet","onLoad","onError","crossOrigin","sizes","ignoreFallback","status","setStatus","useState","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","shouldShowFallbackImage","fallbackStrategy","Heading","styles","className","rest","h2","cx","__css","_ref","_post$frontmatter$fea","data","post","markdownRemark","previous","next","accentColor","React","Container","maxW","py","spacing","as","mb","color","frontmatter","title","Text","fontSize","date","Math","ceil","wordCount","words","author","featuredImage","publicURL","alt","borderRadius","w","h","objectFit","Box","sx","mt","fontWeight","p","ul","pl","li","blockquote","borderLeftWidth","borderLeftColor","fontStyle","dangerouslySetInnerHTML","__html","html","Button","Link","to","colorScheme","variant","NativeImage","htmlWidth","htmlHeight","width","height","fallbackSrc","fallback","fit","referrerPolicy","shouldIgnoreFallbackImage","showFallbackImage","shared","objectPosition","omit"],"sourceRoot":""}